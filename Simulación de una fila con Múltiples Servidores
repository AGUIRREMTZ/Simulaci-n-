import random
import heapq
import matplotlib.pyplot as plt

# Parámetros del sistema
tasa_llegada = 1/5    # promedio de llegada: un cliente cada 5 minutos
tasa_servicio = 1/6    # promedio de servicio: 6 minutos por cliente
num_servidores = 3     # cantidad de empleados o cajas
tiempo_simulacion = 300  # duración total en minutos

# Variables de simulación
reloj = 0
eventos = []  # (tiempo_evento, tipo, id_cliente)
heapq.heappush(eventos, (random.expovariate(tasa_llegada), "llegada", 1))

cola = []
servidores_libres = num_servidores
clientes_en_sistema = 0
tiempos_espera = []
clientes_atendidos = 0
uso_servidor = 0

# Para graficar
tiempos = []
longitudes_cola = []

# Simulación
while eventos and reloj < tiempo_simulacion:
    reloj, tipo, id_cliente = heapq.heappop(eventos)

    if tipo == "llegada":
        clientes_en_sistema += 1
        if servidores_libres > 0:
            servidores_libres -= 1
            tiempo_servicio = random.expovariate(tasa_servicio)
            heapq.heappush(eventos, (reloj + tiempo_servicio, "salida", id_cliente))
            uso_servidor += tiempo_servicio
        else:
            cola.append((id_cliente, reloj))

        # Programar próxima llegada
        prox_llegada = reloj + random.expovariate(tasa_llegada)
        heapq.heappush(eventos, (prox_llegada, "llegada", id_cliente + 1))

    elif tipo == "salida":
        clientes_atendidos += 1
        clientes_en_sistema -= 1
        if cola:
            id_cola, llegada_cola = cola.pop(0)
            tiempo_espera = reloj - llegada_cola
            tiempos_espera.append(tiempo_espera)
            tiempo_servicio = random.expovariate(tasa_servicio)
            heapq.heappush(eventos, (reloj + tiempo_servicio, "salida", id_cola))
            uso_servidor += tiempo_servicio
        else:
            servidores_libres += 1

    # Datos para gráfica
    tiempos.append(reloj)
    longitudes_cola.append(len(cola))

# Resultados
print("\n--- RESULTADOS DE LA SIMULACIÓN (M/M/c) ---")
print(f"Clientes atendidos: {clientes_atendidos}")
print(f"Tiempo promedio de espera: {sum(tiempos_espera)/len(tiempos_espera):.2f} minutos")
print(f"Utilización promedio de los servidores: {(uso_servidor / (num_servidores * reloj)):.2f}")
print(f"Longitud promedio de la cola: {sum(longitudes_cola)/len(longitudes_cola):.2f}")

# Gráfica
plt.plot(tiempos, longitudes_cola, color='purple')
plt.title(f"Evolución de la cola en un sistema M/M/{num_servidores}")
plt.xlabel("Tiempo (minutos)")
plt.ylabel("Clientes en cola")
plt.grid(True)
plt.show()
